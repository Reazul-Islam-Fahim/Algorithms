package String_Matching;

import java.util.Scanner;

public class KMP 
{
    static void computeLPS(String pat, int m, int[] lps)
    {
        int len = 0; 
        int i = 1;
        lps[0] = 0;
        while(i<m)
        {
            if(pat.charAt(i)==pat.charAt(len))
            {
                lps[i]=len+1;
                len++;
                i++;
            }
            else
            {
                if(len!=0)
                {
                    len = lps[len-1];
                }
                else
                {
                    lps[i] = 0;
                    i++;
                }
            }
        }
    }
    static void kmpSearch(String txt, String pat)
    {
        int n = txt.length();
        int m = pat.length();
        int lps[] = new int[m];
        computeLPS(pat,m,lps);
        int i=0, j=0;
        while(i<=n-m+1)
        {
            if(txt.charAt(i) == pat.charAt(j))
            {
                i++;
                j++;
            }
            else
            {
                if(j!=0){ j = lps[j-1];}
                else {i++;}
            }
            if(j==m)
            {
                System.out.println("Pattern is found at index: "+(i-j));
                j = lps[j-1];
            }
        }
    }
    public static void main(String[] args)
    {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter the text: ");
        String txt = input.nextLine();
        System.out.print("Enter the pattern: ");
        String pat = input.nextLine();
        kmpSearch(txt,pat);
    }
}

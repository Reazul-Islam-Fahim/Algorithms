package String_Matching;

import java.util.Scanner;

public class Robin_Karp 
{
    //d is the number of characters in the input alphabet
    public final static int d = 256;
    
    static void search(String pat, String txt, int q)
    {
        int i,j;
        int m = pat.length();
        int n = txt.length();
        int p = 0;//hash value for pattern
        int t = 0;//hash value for text
        int h = 1;
        for(i=0;i<m-1;i++)
        {
            h = (h*d)%q; // h=pow(d, m-1)%q
        }
        for(i=0;i<m;i++)
        {
            p = (d*p + pat.charAt(i))%q;
            t = (d*t + txt.charAt(i))%q;
        }
        for(i=0;i<=n-m;i++)
        {
            if(p==t)
            {
                
                for(j=0;j<m;j++)
                {
                    if(txt.charAt(i+j)!=pat.charAt(j)) break;
                }
                if(j==m)
                {
                  System.out.println("Pattern is found at index: "+i);
                }      
            }
            if(i<n-m)
            {
                t = (d*(t-txt.charAt(i)*h) + txt.charAt(i+m))%q;
                if(t<0) t = t+q;
            }
        }
    }
    public static void main(String[] args)
    {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter the text: ");
        String txt = input.nextLine();
        System.out.print("Enter the pattern: ");
        String pat = input.nextLine();
        int q =101;
        search(pat, txt, q);
    }
}
